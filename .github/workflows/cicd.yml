name: CICD

on: [push, pull_request]

env:
  ARTIFACT_DIR: release-artifacts

jobs:
  check:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust envrionment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: Check format
        run: cargo fmt --all -- --check

      - name: Check clippy
        run: cargo clippy --all --all-features

      - name: Run rust test
        run: cargo test --all-features

      - name: Setup k8s e2e env
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: spacegate-test
          args: >-
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: Init k8s e2e env
        run: |
          cd ~ 
          pwd
          cd -
          echo $KUBECONFIG
          echo "========="
          cat ~/.kube/config
          kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v0.6.2/experimental-install.yaml
          cargo build -p spacegate
          cd services/full/res
          mv ../../../target/debug/spacegate ./
          docker build -t ecfront/spacegate:0.1.0-alpha.2 .
          rm spacegate
          k3d image import ecfront/spacegate:0.1.0-alpha.2 -c spacegate-test --verbose

          kubectl wait --for=condition=Ready pod -l name=gateway-api-admission-server -n gateway-system
          sleep 5
          cd ../../../
          kubectl apply -f ./kernel/res/namespace.yaml
          kubectl apply -f ./kernel/res/gatewayclass.yaml
          kubectl apply -f ./kernel/res/spacegate-gateway.yaml
          kubectl wait --for=condition=Ready pod -l app=spacegate -n spacegate
          sleep 5

      - name: Run k8s e2e test
        run: |
          cd ./e2e
          sudo bash ./e2e-test.sh

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: cobertura.xml

  release-linux:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            aarch64-unknown-linux-musl,
          ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust environment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Run build spacegate-simplify (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate-simplify

      - name: Run build spacegate-native (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate-native

      - name: Run build spacegate-full (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate

      - name: Prepare artifacts
        run: |
          SRC_DIR=target/${{ matrix.target }}/release
          DEST_DIR=${{ env.ARTIFACT_DIR }}
          mkdir -p ${DEST_DIR}

          RELEASE_NAME_FULL=spacegate-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM_FULL=${RELEASE_NAME_FULL}.checksum.txt
          mv ${SRC_DIR}/spacegate ${RELEASE_NAME_FULL}
          shasum -a 256 ${RELEASE_NAME_FULL} > ${CHECKSUM_FULL}

          RELEASE_NAME_NATIVE=spacegate-native-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM_NATIVE=${RELEASE_NAME_NATIVE}.checksum.txt
          mv ${SRC_DIR}/spacegate-native ${RELEASE_NAME_NATIVE}
          shasum -a 256 ${RELEASE_NAME_NATIVE} > ${CHECKSUM_NATIVE}

          RELEASE_NAME_SIMPLIFY=spacegate-simplify-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM_SIMPLIFY=${RELEASE_NAME_SIMPLIFY}.checksum.txt
          mv ${SRC_DIR}/spacegate-simplify ${RELEASE_NAME_SIMPLIFY}
          shasum -a 256 ${RELEASE_NAME_SIMPLIFY} > ${CHECKSUM_SIMPLIFY}

          mv ${RELEASE_NAME_FULL} ${DEST_DIR}
          mv ${CHECKSUM_FULL} ${DEST_DIR}
          mv ${RELEASE_NAME_NATIVE} ${DEST_DIR}
          mv ${CHECKSUM_NATIVE} ${DEST_DIR}
          mv ${RELEASE_NAME_SIMPLIFY} ${DEST_DIR}
          mv ${CHECKSUM_SIMPLIFY} ${DEST_DIR}

          ls ${DEST_DIR}

      - name: Upload artifacts to summary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: |
            ${{ env.ARTIFACT_DIR }}/

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ARTIFACT_DIR }}/*.*

  release-macos:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check]
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          [
            x86_64-apple-darwin,
            aarch64-apple-darwin,
          ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust environment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Run build spacegate-simplify (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate-simplify

      - name: Run build spacegate-native (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate-native

      - name: Run build spacegate-full (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate

      - name: Prepare artifacts
        run: |
          SRC_DIR=target/${{ matrix.target }}/release
          DEST_DIR=${{ env.ARTIFACT_DIR }}
          mkdir -p ${DEST_DIR}

          RELEASE_NAME_FULL=spacegate-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM_FULL=${RELEASE_NAME_FULL}.checksum.txt
          mv ${SRC_DIR}/spacegate ${RELEASE_NAME_FULL}
          shasum -a 256 ${RELEASE_NAME_FULL} > ${CHECKSUM_FULL}

          RELEASE_NAME_NATIVE=spacegate-native-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM_NATIVE=${RELEASE_NAME_NATIVE}.checksum.txt
          mv ${SRC_DIR}/spacegate-native ${RELEASE_NAME_NATIVE}
          shasum -a 256 ${RELEASE_NAME_NATIVE} > ${CHECKSUM_NATIVE}

          RELEASE_NAME_SIMPLIFY=spacegate-simplify-${{ matrix.target }}-${{ github.ref_name }}
          CHECKSUM_SIMPLIFY=${RELEASE_NAME_SIMPLIFY}.checksum.txt
          mv ${SRC_DIR}/spacegate-simplify ${RELEASE_NAME_SIMPLIFY}
          shasum -a 256 ${RELEASE_NAME_SIMPLIFY} > ${CHECKSUM_SIMPLIFY}

          mv ${RELEASE_NAME_FULL} ${DEST_DIR}
          mv ${CHECKSUM_FULL} ${DEST_DIR}
          mv ${RELEASE_NAME_NATIVE} ${DEST_DIR}
          mv ${CHECKSUM_NATIVE} ${DEST_DIR}
          mv ${RELEASE_NAME_SIMPLIFY} ${DEST_DIR}
          mv ${CHECKSUM_SIMPLIFY} ${DEST_DIR}

          ls ${DEST_DIR}

      - name: Upload artifacts to summary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: |
            ${{ env.ARTIFACT_DIR }}/

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ARTIFACT_DIR }}/*.*

  release-windows:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check]
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          [
            #TODO openssl error
            #x86_64-pc-windows-gnu,
            x86_64-pc-windows-msvc,
          ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust environment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      # - name: Prepare build
      #   shell: bash
      #   run: |
      #     git clone https://github.com/Microsoft/vcpkg --depth=1
      #     cd vcpkg
      #     bootstrap-vcpkg.bat
      #     vcpkg.exe integrate install
      #     vcpkg.exe install openssl:x64-windows-static
      #     export OPENSSL_NO_VENDOR=1
      #     export OPENSSL_DIR=$PWD/packages/openssl_x64-windows-static

      - name: Run build spacegate-simplify (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate-simplify

      - name: Run build spacegate-native (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate-native

      - name: Run build spacegate-full (${{ matrix.target }})
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }} -p spacegate

      - name: Prepare artifacts
        shell: bash
        run: |
          SRC_DIR=target/${{ matrix.target }}/release
          DEST_DIR=${{ env.ARTIFACT_DIR }}
          mkdir -p ${DEST_DIR}

          RELEASE_NAME_FULL=spacegate-${{ matrix.target }}-${{ github.ref_name }}.exe
          CHECKSUM_FULL=${RELEASE_NAME_FULL}.checksum.txt
          mv ${SRC_DIR}/spacegate ${RELEASE_NAME_FULL}
          certutil -hashfile ${RELEASE_NAME_FULL} SHA256 >${CHECKSUM_FULL}

          RELEASE_NAME_NATIVE=spacegate-native-${{ matrix.target }}-${{ github.ref_name }}.exe
          CHECKSUM_NATIVE=${RELEASE_NAME_NATIVE}.checksum.txt
          mv ${SRC_DIR}/spacegate-native ${RELEASE_NAME_NATIVE}
          certutil -hashfile ${RELEASE_NAME_NATIVE} SHA256 >${CHECKSUM_NATIVE}

          RELEASE_NAME_SIMPLIFY=spacegate-simplify-${{ matrix.target }}-${{ github.ref_name }}.exe
          CHECKSUM_SIMPLIFY=${RELEASE_NAME_SIMPLIFY}.checksum.txt
          mv ${SRC_DIR}/spacegate-simplify ${RELEASE_NAME_SIMPLIFY}
          certutil -hashfile ${RELEASE_NAME_SIMPLIFY} SHA256 >${CHECKSUM_SIMPLIFY}

          mv ${RELEASE_NAME_FULL} ${DEST_DIR}
          mv ${CHECKSUM_FULL} ${DEST_DIR}
          mv ${RELEASE_NAME_NATIVE} ${DEST_DIR}
          mv ${CHECKSUM_NATIVE} ${DEST_DIR}
          mv ${RELEASE_NAME_SIMPLIFY} ${DEST_DIR}
          mv ${CHECKSUM_SIMPLIFY} ${DEST_DIR}

          ls ${DEST_DIR}

      - name: Upload artifacts to summary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: |
            ${{ env.ARTIFACT_DIR }}/

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ARTIFACT_DIR }}/*.*

  publish-lib-kernel:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Init rust envrionment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cargo login
        run: cargo login ${{ secrets.CRATES_TOKEN }}

      - name: Cargo package kernel
        working-directory: kernel
        run: cargo package

      - name: Cargo publish kernel
        working-directory: kernel
        run: cargo publish
