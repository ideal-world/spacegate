[package]
name = "spacegate-plugin"
version.workspace = true
authors.workspace = true
description.workspace = true
keywords.workspace = true
categories.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
readme = "../README.md"

[lib]
name = "spacegate_plugin"
path = "src/lib.rs"

[features]
cache = ["redis"]
redis = ["spacegate-kernel/ext-redis", "spacegate-ext-redis"]
axum = ["spacegate-ext-axum"]
limit = ["cache"]
header-modifier = []
inject = []
redirect = ["url"]
retry = []
rewrite = []
maintenance = ["ipnet", "schemars/chrono"]
# decompression = ["tower-http/decompression-full"]
status = ["hyper-util"]
full = [
    "cache",
    "limit",
    "header-modifier",
    "inject",
    "redirect",
    "retry",
    "rewrite",
    "maintenance",
    # "decompression",
    "status",
]
schema = ["schemars"]

[dependencies]
spacegate-kernel = { path = "../kernel" }
tracing = { workspace = true }
hyper = { workspace = true }
http-body-util = { workspace = true }
tower-layer = { workspace = true }
rustls = { workspace = true }
pin-project-lite = { workspace = true }
hyper-util = { workspace = true, optional = true }
# serde
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
tokio-util = { workspace = true, features = ["io"] }
schemars = { workspace = true, optional = true }
# future
futures-util = { workspace = true }

# plugin-maintenance
ipnet = { workspace = true, optional = true }

# time
chrono = { workspace = true }

rand = { version = "0" }
url = { version = "2", optional = true }

# cache
spacegate-ext-redis = { path = "../extension/redis", optional = true }
spacegate-ext-axum = { path = "../extension/axum", optional = true }

# rt
tokio = { workspace = true }
arc-swap = "1"

[dev-dependencies]
tracing-subscriber = { workspace = true }
tardis = { workspace = true, features = ["cache", "test"] }
async-compression = { version = "0.4", features = [
    "tokio",
    "gzip",
    "deflate",
    "brotli",
] }
testcontainers = "0.15.0"
testcontainers-modules = { workspace = true, features = ["redis"] }
regex.workspace = true


[[test]]
name = "export_schema"
path = "tests/export_schema.rs"
required-features = ["schema", "cache"]
